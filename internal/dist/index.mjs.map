{"version":3,"sources":["../../src/convert-to-openai-compatible-chat-messages.ts","../../src/map-openai-compatible-finish-reason.ts","../../src/get-response-metadata.ts"],"sourcesContent":["import {\n\tLanguageModelV1Prompt,\n\tLanguageModelV1ProviderMetadata,\n\tUnsupportedFunctionalityError,\n} from '@ai-sdk/provider'\nimport { convertUint8ArrayToBase64 } from '@ai-sdk/provider-utils'\nimport { GenApiChatPrompt } from './openai-compatible-api-types'\n\nfunction getGenAPIMetadata (message: {\n\tproviderMetadata?: LanguageModelV1ProviderMetadata;\n}) {\n\treturn message?.providerMetadata?.genApi ?? {}\n}\n\nexport function convertToGenApiChatMessages (\n\tprompt: LanguageModelV1Prompt,\n): GenApiChatPrompt {\n\tconst messages: GenApiChatPrompt = []\n\tfor (const { role, content, ...message } of prompt) {\n\t\tconst metadata = getGenAPIMetadata({ ...message })\n\t\tswitch (role) {\n\t\t\tcase 'system': {\n\t\t\t\tmessages.push({ role: 'system', content, ...metadata })\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tcase 'user': {\n\t\t\t\tif (content.length === 1 && content[0].type === 'text') {\n\t\t\t\t\tmessages.push({\n\t\t\t\t\t\trole: 'user',\n\t\t\t\t\t\tcontent: content[0].text,\n\t\t\t\t\t\t...getGenAPIMetadata(content[0]),\n\t\t\t\t\t})\n\t\t\t\t\tbreak\n\t\t\t\t}\n\n\t\t\t\tmessages.push({\n\t\t\t\t\trole: 'user',\n\t\t\t\t\tcontent: content.map(part => {\n\t\t\t\t\t\tconst partMetadata = getGenAPIMetadata(part)\n\t\t\t\t\t\tswitch (part.type) {\n\t\t\t\t\t\t\tcase 'text': {\n\t\t\t\t\t\t\t\treturn { type: 'text', text: part.text, ...partMetadata }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase 'image': {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\ttype: 'image_url',\n\t\t\t\t\t\t\t\t\timage_url: {\n\t\t\t\t\t\t\t\t\t\turl:\n\t\t\t\t\t\t\t\t\t\t\tpart.image instanceof URL\n\t\t\t\t\t\t\t\t\t\t\t\t? part.image.toString()\n\t\t\t\t\t\t\t\t\t\t\t\t: `data:${\n\t\t\t\t\t\t\t\t\t\t\t\t\tpart.mimeType ?? 'image/jpeg'\n\t\t\t\t\t\t\t\t\t\t\t\t};base64,${convertUint8ArrayToBase64(part.image)}`,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t...partMetadata,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase 'file': {\n\t\t\t\t\t\t\t\tthrow new UnsupportedFunctionalityError({\n\t\t\t\t\t\t\t\t\tfunctionality: 'File content parts in user messages',\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\t...metadata,\n\t\t\t\t})\n\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tcase 'assistant': {\n\t\t\t\tlet text = ''\n\t\t\t\tconst toolCalls: Array<{\n\t\t\t\t\tid: string;\n\t\t\t\t\ttype: 'function';\n\t\t\t\t\tfunction: { name: string; arguments: string };\n\t\t\t\t}> = []\n\n\t\t\t\tfor (const part of content) {\n\t\t\t\t\tconst partMetadata = getGenAPIMetadata(part)\n\t\t\t\t\tswitch (part.type) {\n\t\t\t\t\t\tcase 'text': {\n\t\t\t\t\t\t\ttext += part.text\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'tool-call': {\n\t\t\t\t\t\t\ttoolCalls.push({\n\t\t\t\t\t\t\t\tid: part.toolCallId,\n\t\t\t\t\t\t\t\ttype: 'function',\n\t\t\t\t\t\t\t\tfunction: {\n\t\t\t\t\t\t\t\t\tname: part.toolName,\n\t\t\t\t\t\t\t\t\targuments: JSON.stringify(part.args),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t...partMetadata,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmessages.push({\n\t\t\t\t\trole: 'assistant',\n\t\t\t\t\tcontent: text,\n\t\t\t\t\ttool_calls: toolCalls.length > 0 ? toolCalls : undefined,\n\t\t\t\t\t...metadata,\n\t\t\t\t})\n\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tcase 'tool': {\n\t\t\t\tfor (const toolResponse of content) {\n\t\t\t\t\tconst toolResponseMetadata = getGenAPIMetadata(toolResponse)\n\t\t\t\t\tmessages.push({\n\t\t\t\t\t\trole: 'tool',\n\t\t\t\t\t\ttool_call_id: toolResponse.toolCallId,\n\t\t\t\t\t\tcontent: JSON.stringify(toolResponse.result),\n\t\t\t\t\t\t...toolResponseMetadata,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tdefault: {\n\t\t\t\tconst _exhaustiveCheck: never = role\n\t\t\t\tthrow new Error(`Unsupported role: ${_exhaustiveCheck}`)\n\t\t\t}\n\t\t}\n\t}\n\n\treturn messages\n}\n","import { LanguageModelV1FinishReason } from '@ai-sdk/provider'\n\nexport function mapGenApiFinishReason (\n\tfinishReason: string | null | undefined,\n): LanguageModelV1FinishReason {\n\tswitch (finishReason) {\n\t\tcase 'stop':\n\t\t\treturn 'stop'\n\t\tcase 'length':\n\t\t\treturn 'length'\n\t\tcase 'content_filter':\n\t\t\treturn 'content-filter'\n\t\tcase 'function_call':\n\t\tcase 'tool_calls':\n\t\t\treturn 'tool-calls'\n\t\tdefault:\n\t\t\treturn 'unknown'\n\t}\n}\n","export function getResponseMetadata ({\n\t                                     id,\n\t                                     model,\n\t                                     created,\n                                     }: {\n\tid?: string | undefined | null;\n\tcreated?: number | undefined | null;\n\tmodel?: string | undefined | null;\n}) {\n\treturn {\n\t\tid: id ?? undefined,\n\t\tmodelId: model ?? undefined,\n\t\ttimestamp: created != null ? new Date(created * 1000) : undefined,\n\t}\n}\n"],"mappings":"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","names":[]}